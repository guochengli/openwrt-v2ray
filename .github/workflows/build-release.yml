name: Build and Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  release:
    name: Build for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: mips64_octeon
            sdk_url_path: http://downloads.openwrt.org/releases/18.06.5/targets/octeon/generic
            sdk_name: -sdk-18.06.5-octeon_
          - arch: mips64_octeonplus
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/octeon/generic
            sdk_name: -sdk-octeon_
          - arch: mipsel_24kc
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/ramips/mt7620
            sdk_name: -sdk-ramips-mt7620_
          - arch: mipsel_24kc_24kf
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/pistachio/generic
            sdk_name: -sdk-pistachio_
          - arch: mipsel_74kc
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/bcm47xx/mips74k
            sdk_name: -sdk-bcm47xx-mips74k_
          - arch: mipsel_mips32
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/bcm47xx/generic
            sdk_name: -sdk-bcm47xx-generic_
          - arch: mips_24kc
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/ath79/generic
            sdk_name: -sdk-ath79-generic_
          - arch: mips_mips32
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/bcm63xx/generic
            sdk_name: -sdk-bcm63xx-generic_
          - arch: x86_64
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/x86/64
            sdk_name: -sdk-x86-64_

    env:
      SDK_URL_PATH: ${{ matrix.sdk_url_path }}
      SDK_NAME: ${{ matrix.sdk_name }}
      ARCH: ${{ matrix.arch }}
      CACHE_DIR: ~/cache
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}:openwrt-v2ray:${{ env.ARCH }}:release:cache:${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}:openwrt-v2ray:${{ env.ARCH }}:cache:

      - name: Setup CCache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}:openwrt-v2ray:${{ env.ARCH }}:release:ccache:${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}:openwrt-v2ray:${{ env.ARCH }}:ccache:

      - name: Install Dependencies
        run: |
          sudo apt-get update && \
            sudo apt-get install -yq gettext libncurses5-dev rsync xsltproc

      - name: Prepare For Build
        run: |
          sdk_home="$(mktemp -d)"

          test -d ~/.ccache || mkdir -p ~/.ccache
          ln -sf ~/.ccache "$sdk_home/.ccache"

          echo "SDK_HOME=$sdk_home" >> $GITHUB_ENV
          echo "CONFIG_CCACHE=y" >> $GITHUB_ENV

      - name: Build package
        env:
          OPENWRT_GOLANG_COMMIT: ${{ secrets.OPENWRT_GOLANG_COMMIT }}
        run: sh compile.sh

      - name: Show CCache Status
        run: |
          eval "${{ env.SDK_HOME }}/staging_dir/host/bin/ccache -s"

      - name: Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          files: "*.ipk"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Notify Release Publish
    runs-on: ubuntu-latest
    env:
      TRIGGER_URL: ${{ secrets.TRIGGER_URL }}
      TRIGGER_TOKEN: ${{ secrets.TRIGGER_TOKEN }}
    needs: release
    steps:
      - name: Notify Jenkins
        run: |
          if [ -z "$TRIGGER_URL" ] ; then
            echo "::warning::No trigger url found, skip..."
            exit 0
          fi
          curl -X POST \
              -H "Content-Type: application/json; charset=utf-8" \
              -H "Authorization: Bearer $TRIGGER_TOKEN" \
              -d "{\"event\":\"release\",\"repository\":\"${{ github.repository }}\",\"ref\":\"${{ github.ref }}\"}" \
              "$TRIGGER_URL" || true
